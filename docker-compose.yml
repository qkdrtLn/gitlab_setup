services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: always
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false

      # entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # опционально, если хотите прокидывать SSH через Traefik TCP
      - --entrypoints.ssh.address=:22

      # http->https redirect
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https

      # ACME / Let's Encrypt
      - --certificatesresolvers.letsencrypt.acme.email=you@example.com     # <-- ваш email
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web

      # Логи (по желанию)
      - --accesslog=true
      - --log.level=INFO

    ports:
      - "80:80"
      - "443:443"
      # - "22:22"   # включите, если хотите Git SSH через Traefik TCP
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt

  gitlab:
    image: gitlab/gitlab-ce:18.5.0-ce.0
    container_name: gitlab
    restart: always
    hostname: 'gitlab.nikitaserkin.pp.ua'
    # ports:
    #   - "22:22"
    #   - "80:80"
    #   - "443:443"
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
    shm_size: '256m'
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: gitlab
      POSTGRES_USER: gitlab
      POSTGRES_PASSWORD: gitlab
      POSTGRES_HOST_AUTH_METHOD: trust
      GITLAB_OMNIBUS_CONFIG: "from_file('/omnibus_config.rb')"
    configs:
      - source: gitlab
        target: /omnibus_config.rb
    secrets:
      - gitlab_root_password
    labels:
      - traefik.enable=true

      # HTTP(S) роутер
      - traefik.http.routers.gitlab.rule=Host(`gitlab.nikitaserkin.pp.ua`)
      - traefik.http.routers.gitlab.entrypoints=websecure
      - traefik.http.routers.gitlab.tls.certresolver=letsencrypt

      # Сервис и порт бэкенда в контейнере GitLab (внутренний nginx слушает 80)
      - traefik.http.services.gitlab.loadbalancer.server.port=80

      # Длинные таймауты для пушей/клонирования через HTTP(S)
      - traefik.http.services.gitlab.loadbalancer.server.scheme=http
      - traefik.http.services.gitlab.loadbalancer.passhostheader=true

      # Проброс необходимых заголовков (подстраховка)
      - traefik.http.middlewares.gitlab-headers.headers.customrequestheaders.X-Forwarded-Proto=https
      - traefik.http.routers.gitlab.middlewares=gitlab-headers

      # --- Опционально: Git SSH через Traefik TCP (если нужно) ---
      # - traefik.tcp.routers.gitlab-ssh.rule=HostSNI(`*`)
      # - traefik.tcp.routers.gitlab-ssh.entrypoints=ssh
      # - traefik.tcp.services.gitlab-ssh.loadbalancer.server.port=22
      # ------------------------------------------------------------  
      

  gitlab-runner:
    image: gitlab/gitlab-runner:alpine
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock 
      - ./config:/etc/gitlab-runner
    environment:
      GITLAB_RUNNER_IMAGE_TYPE: gitlab-runner 
      GITLAB_RUNNER_IMAGE_TAG: alpine-v17.9.1 
 
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: postgres:17
    ports: 
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      # - ./postgres_data:/var/lib/postgresql/data/ 
    environment:
      POSTGRES_DB: gitlab
      POSTGRES_USER: gitlab
      POSTGRES_PASSWORD: gitlab
      POSTGRES_HOST_AUTH_METHOD: trust
  
configs:
  gitlab:
    file: ./gitlab.rb
secrets:
  gitlab_root_password:
    file: ./root_password.txt
volumes:    
  postgres_data:
  gitlab_data:
  gitlab_logs:
  gitlab_config: